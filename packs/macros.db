{"name":"Allocate Character","type":"script","author":"id6kMyBVD3NnFdod","img":"icons/creatures/eyes/human-single-blue.webp","scope":"global","command":"let actor = token?.actor;\nlet options = \"\";\nif (!actor) return ui.notifications.error(\"Please select a token first.\");\nif (actor.isToken) return ui.notifications.error(\"The token must have Actor Link ON to be assigned to a user.\");\ngame.users.forEach(user => {\n    options += `<option value = \"${user.id}\">${user.name}</option>`\n})\n\nlet user_id= await new Promise(resolve => {\n            new Dialog({\n                title: \"Pick a User\",\n                content: `<p/><div align=\"center\"><select id=\"get_user\">${options}</select></div>`,\n                buttons: {\n                    ok: {\n                        label: \"OK\",\n                        callback: () => {\n                            resolve(document.getElementById(\"get_user\").value)\n                        }\n                    }\n                },\n                default:\"ok\"\n            }).render(true);\n        });\n\n        let user = game.users.get(user_id);\n\n        // Give the user owner permissions for the selected character\n        await actor.update({\"permission\":{[user.id]:3}})\n        \n        // Reset their permissions to default for their previous character\n                if (user.character) {\n                    let permissions = user.character.data.permission\nconsole.log(permissions)\n                    let newPermissions = {};\n                    for (let permission in permissions){\n                        console.log(permission);\n                        console.log(user.id);\n                        if (permission != user.id) newPermissions[permission] = permissions[permission];\n                    }\nconsole.log(newPermissions)\n                    await user.character.update({permission:newPermissions},{diff:false, recursive:false, render:true, noHook:true});\n                }\n        \n        // Assign the character to the user.\n        await user.update({ character : actor.id });","folder":null,"sort":0,"permission":{"default":0,"id6kMyBVD3NnFdod":3},"flags":{"core":{"sourceId":"Macro.ndIWMDfABqI7nTu0"}},"_id":"3rIISB1ysvBlB77Z"}
{"name":"Create an Ad-Hoc Zone (0.8)","type":"script","author":"id6kMyBVD3NnFdod","img":"icons/sundries/scrolls/scroll-yellow-teal.webp","scope":"global","command":"let text= await new Promise(resolve => {\n            new Dialog({\n                title: \"Pick a Zone Name\",\n                content: '<p/><div align=\"center\"><input id=\"dialog_box\" style=\"width:375px\" autofocus></input></div>',\n                buttons: {\n                    ok: {\n                        label: \"OK\",\n                        callback: () => {\n                            resolve(document.getElementById(\"dialog_box\").value)\n                        }\n                    }\n                },\n                default:\"ok\"\n            }).render(true);\n        });\n\nDrawingDocument.create({\n                type: CONST.DRAWING_TYPES.RECTANGLE,\n                author: game.user.id,\n                x: canvas.stage.pivot._x,\n                y: canvas.stage.pivot._y,\n                width: 500,\n                height: 350,\n                text: text,\n                fillType: CONST.DRAWING_FILL_TYPES.SOLID,\n                fillColor: \"#FFFFFF\",\n                fillAlpha: 1,\n                strokeWidth: 4,\n                strokeColor: \"#000000\",\n                strokeAlpha: 1,\n                fontFamily: \"Modesto Condensed\",\n                fontSize: 48,\n                textColor: \"#000000\",\n                align:\"left\",\n                points: []\n            }, {parent: game.scenes.viewed});","folder":null,"sort":0,"permission":{"default":0,"id6kMyBVD3NnFdod":3},"flags":{"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.ohyUa2aEAt90Xw7f"}},"_id":"4kvNWONhUr8JZb5n"}
